<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 이름은 SQL을 찾을 때 사용하는 그룹명이다.
     따라서 SQL 문을 사용하는 DAO 클래스 이름과 같게 하면
     유지보수할 때 알아보기 쉽다.
     단순히 알아보기 쉬울 뿐만 아니라 
     스프링 프레임워크와 연동할 때 DAO 객체를 자동 생성할 수 있다. 
-->
<mapper namespace="bitcamp.java106.pms.dao.PlannerDao">

  <resultMap type="Planner" id="PlannerMap">
    <id column="PLNO" property="no"/>
    <result column="SDT" property="startDate"/>
    <result column="EDT" property="endDate"/>
    <result column="PATA" property="num"/>
    <result column="PART" property="people"/>
    <result column="THEMA" property="theme"/>
    <result column="TITL" property="title"/>
  </resultMap>
  
  <!-- SQL 문 id를 설정할 때 SQL문을 사용하는 메서드 이름과 같게하면
       유지보수할 때 알아보기 쉽다. 
       알아보기 쉬울 뿐만 아니라
       스프링 프레임워크와 연동할 때 DAO객체를 자동생성하고 
       그 메서드를 자동생성할 때 사용할 수 있다.
  -->
  
   <insert id="insert" parameterType="map"
       useGeneratedKeys="true" keyColumn="PLNO" >
       insert into
       TAMLA_PLAN(PLNO,SDT,EDT,PATA,PART,THEMA) <!-- 회원번호 추가 필요 MNO -->
       values(#{no},#{startDate},#{endDate},#{num},#{people},#{theme})
       <selectKey resultType="int" keyProperty="no" order="AFTER" >  
           SELECT LAST_INSERT_ID()
       </selectKey>
   </insert>
    
  <select id="selectOne" 
          resultMap="PlannerMap" 
          parameterType="map">
   SELECT TP.PLNO, TP.SDT, TP.EDT, TP.PATA, TP.PART, TP.THEMA
   FROM TAMLA_PLAN TP
   where TP.PLNO=#{no}
  </select>
  
  
   <select id="selectList" resultMap="PlannerMap"
       parameterType="map">
	   SELECT TP.PLNO, TP.SDT, TP.EDT, TP.PATA, TP.PART, TP.THEMA, C.CNO, C.TITL
	   FROM TAMLA_PLAN TP
	   left join TAMLA_CONTENT C on TP.PLNO = C.CNO
 
       <!-- order by no desc limit #{startRowNo}, #{pageSize} -->
   </select>
  <!-- 파라미터의 타입이 primitive type이나 wrapper 클래스, String 클래스인 경우
       값을 꺼낼 때 프로퍼티 이름을 마음대로 해도 된다.
  -->
  
</mapper>







